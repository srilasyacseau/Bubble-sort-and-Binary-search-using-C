#include <stdio.h>
#define MAX_SIZE 100
void bubble_sort(int arr[],int n);
int binary_search(int arr[],int n,int key);
int main()
{
	int arr[MAX_SIZE],n,key,index;
	
	printf("\tEnter the size of the list: ");
	scanf("%d",&n);
	printf("\tEnter %d elements: \n",n);
	for(int i=0; i<n; i++)
	{
	    printf("\t");
		scanf("%d",&arr[i]);
	}
	
	bubble_sort(arr,n);
	printf("\n\n\tSorted list: \n\n");
	
	printf("\t");
	
	for(int i=0; i<n; i++)
	{
		printf("%d\t",arr[i]);
	}
	
	printf("\n\n");
	
	printf("\tEnter the key to search: ");
	scanf("%d",&key);
	
	index = binary_search(arr,n,key);
	
	if(index == -1)
	{
		printf("\tKey not found.\n");
	}
	else
	{
		printf("\tKey found at index %d.\n",index+1);
	}
	
	return 0;
}


void bubble_sort(int arr[],int n)
{
	for(int i=0; i< n-1; i++)
	{
		printf("\n\tPASS %d:\t",i+1);
		for(int j=0; j< n-i-1;j++)
		{
			if(arr[j] > arr[j+1])
			{
				int temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
		
		for(int j=0;j<n;j++)
		{ 
		    printf("%d\t",arr[j]);
		}
	}
}


int binary_search(int arr[],int n, int key)
{
	int low = 1,high = n;
	
	while(low <= high)
	{
		int mid = (low + high)/2;
		
		if(arr[mid] == key)
		{
			return mid;
		}
		else if(arr[mid] < key)
		{
			low = mid;
		}
		else
		{
			high = mid;
		}
	}
	
	return 0;
}
